Terminals unused in grammar

   INTERFACE
   SELECT
   MAP
   STRUCT
   CHAN


State 30 conflicts: 1 shift/reduce
State 36 conflicts: 1 shift/reduce
State 56 conflicts: 1 reduce/reduce
State 61 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce, 1 reduce/reduce
State 154 conflicts: 1 reduce/reduce
State 160 conflicts: 5 shift/reduce
State 187 conflicts: 8 shift/reduce
State 192 conflicts: 3 shift/reduce
State 193 conflicts: 3 reduce/reduce
State 194 conflicts: 1 shift/reduce
State 197 conflicts: 5 shift/reduce
State 206 conflicts: 1 shift/reduce, 1 reduce/reduce
State 207 conflicts: 5 shift/reduce
State 211 conflicts: 1 reduce/reduce
State 212 conflicts: 5 shift/reduce
State 219 conflicts: 5 shift/reduce
State 312 conflicts: 1 reduce/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SC ImportDecl SC TopLevelDecl SC

    2 PackageClause: PACKAGE PackageName
    3              | error

    4 PackageName: IDENTIFIER
    5            | STRING_LIT

    6 ImportDecl: ImportDecl IMPORT PackageName
    7           | error
    8           | %empty

    9 Block: LCB StatementList RCB
   10      | LCB error RCB

   11 StatementList: StatementList Statement SC
   12              | %empty

   13 Type: TypeName
   14     | TypeLit
   15     | LRB Type RRB

   16 TypeName: IDENTIFIER

   17 TypeLit: ArrayType
   18        | PointerType
   19        | FunctionType

   20 ArrayType: LSB ArrayLength RSB ElementType

   21 ArrayLength: Expression

   22 ElementType: Type

   23 PointerType: STAR BaseType

   24 BaseType: Type

   25 FunctionType: FUNC Signature

   26 Signature: Parameters Result
   27          | Parameters

   28 Result: Parameters
   29       | Type

   30 Parameters: LRB ParameterList RRB
   31           | LRB RRB

   32 ParameterList: ParameterList COM ParameterDecl
   33              | ParameterDecl

   34 ParameterDecl: IdentifierList DOTS Type
   35              | IdentifierList Type
   36              | DOTS Type
   37              | Type

   38 VarDecl: VAR VarSpec
   39        | VAR LRB VarSpec SC RepeatVarSpec RRB

   40 RepeatVarSpec: RepeatVarSpec VarSpec SC
   41              | %empty

   42 VarSpec: IdentifierList Type EQ ExpressionList
   43        | IdentifierList Type
   44        | IdentifierList EQ ExpressionList

   45 ConstDecl: CONST ConstSpec
   46          | CONST LRB ConstSpec SC RepeatConstSpec RRB

   47 RepeatConstSpec: RepeatConstSpec ConstSpec SC
   48                | %empty

   49 ConstSpec: IdentifierList Type EQ ExpressionList
   50          | IdentifierList EQ ExpressionList
   51          | IdentifierList

   52 IdentifierList: IdentifierList COM IDENTIFIER
   53               | IDENTIFIER

   54 ExpressionList: ExpressionList COM Expression
   55               | Expression

   56 Declaration: ConstDecl
   57            | VarDecl

   58 TopLevelDecl: TopLevelDecl Declaration
   59             | TopLevelDecl FuncDecl
   60             | error
   61             | %empty

   62 ShortVarDecl: IdentifierList ASSIGN ExpressionList

   63 FuncDecl: FUNC FunctionName Signature FunctionBody

   64 FunctionName: IDENTIFIER

   65 FunctionBody: Block
   66             | %empty

   67 Expression: UnaryExpr
   68           | Expression binary_op Expression

   69 UnaryExpr: PrimaryExpr
   70          | unary_op UnaryExpr

   71 binary_op: LOG_OR
   72          | LOG_AND
   73          | REL_OP
   74          | add_op
   75          | mul_op

   76 add_op: PAR_ADD_OP
   77       | PIPE

   78 mul_op: PAR_MUL_OP
   79       | STAR
   80       | AND

   81 unary_op: PAR_UNARY_OP
   82         | PAR_ADD_OP
   83         | STAR
   84         | AND

   85 PrimaryExpr: Operand
   86            | Selector
   87            | PrimaryExpr Selector
   88            | PrimaryExpr Index
   89            | PrimaryExpr TypeAsertion
   90            | PrimaryExpr Arguments

   91 Selector: DOT IDENTIFIER

   92 Index: LSB Expression RSB

   93 TypeAsertion: DOT LRB Type RRB

   94 Arguments: LRB ExpressionList DOTS COM RRB
   95          | LRB ExpressionList DOTS RRB
   96          | LRB ExpressionList COM RRB
   97          | LRB ExpressionList RRB
   98          | LRB Type OptionArguments DOTS COM RRB
   99          | LRB Type OptionArguments DOTS RRB
  100          | LRB Type OptionArguments COM RRB
  101          | LRB Type OptionArguments RRB
  102          | LRB RRB
  103          | LRB error RRB

  104 OptionArguments: COM Expression
  105                | %empty

  106 Operand: Literal
  107        | OperandName
  108        | LRB Expression RRB
  109        | LRB error RRB

  110 Literal: BasicLit

  111 BasicLit: INT_LIT
  112         | FLOAT_LIT
  113         | IMAGINARY_LIT
  114         | RUNE_LIT
  115         | STRING_LIT

  116 OperandName: IDENTIFIER

  117 Statement: Declaration
  118          | LabeledStmt
  119          | SimpleStmt
  120          | GoStmt
  121          | ReturnStmt
  122          | BreakStmt
  123          | ContinueStmt
  124          | GotoStmt
  125          | FallthroughStmt
  126          | Block
  127          | IfStmt
  128          | SwitchStmt
  129          | ForStmt
  130          | DeferStmt
  131          | error

  132 SimpleStmt: EmptyStmt
  133           | ExpressionStmt
  134           | IncDecStmt
  135           | Assignment
  136           | ShortVarDecl

  137 LabeledStmt: Label COL Statement

  138 Label: IDENTIFIER

  139 GoStmt: GO Expression

  140 ReturnStmt: RETURN ExpressionList
  141           | RETURN

  142 BreakStmt: BREAK Label
  143          | BREAK

  144 ContinueStmt: CONTINUE Label
  145             | CONTINUE

  146 GotoStmt: GOTO Label

  147 FallthroughStmt: FALLTHROUGH

  148 IfStmt: IF SimpleStmt SC Expression Block ELSE IfStmt
  149       | IF SimpleStmt SC Expression Block ELSE Block
  150       | IF SimpleStmt SC Expression Block
  151       | IF Expression Block ELSE IfStmt
  152       | IF Expression Block ELSE Block
  153       | IF Expression Block

  154 SwitchStmt: ExprSwitchStmt
  155           | TypeSwitchStmt

  156 ExprSwitchStmt: SWITCH SimpleStmt SC Expression LCB ExprCaseClause RCB
  157               | SWITCH SimpleStmt SC LCB ExprCaseClause RCB
  158               | SWITCH Expression LCB ExprCaseClause RCB
  159               | SWITCH LCB ExprCaseClause RCB

  160 ExprCaseClause: ExprCaseClause ExprSwitchCase COL StatementList
  161               | %empty

  162 ExprSwitchCase: CASE ExpressionList
  163               | DEFAULT

  164 TypeSwitchStmt: SWITCH SimpleStmt SC TypeSwitchGuard LCB TypeCaseClause RCB
  165               | SWITCH TypeSwitchGuard LCB TypeCaseClause RCB

  166 TypeSwitchGuard: IDENTIFIER ASSIGN PrimaryExpr DOT LRB TYPE RRB
  167                | PrimaryExpr DOT LRB TYPE RRB

  168 TypeCaseClause: TypeCaseClause TypeSwitchCase COL StatementList
  169               | %empty

  170 TypeSwitchCase: CASE TypeList
  171               | DEFAULT

  172 TypeList: TypeList COM Type
  173         | Type

  174 ForStmt: FOR Condition Block
  175        | FOR ForClause Block
  176        | FOR RangeClause Block
  177        | FOR Block

  178 Condition: Expression
  179          | %empty

  180 ForClause: InitStmt SC Condition SC PostStmt

  181 InitStmt: SimpleStmt
  182         | %empty

  183 PostStmt: SimpleStmt
  184         | %empty

  185 RangeClause: ExpressionList EQ RANGE Expression
  186            | IdentifierList ASSIGN RANGE Expression
  187            | RANGE Expression

  188 DeferStmt: DEFER Expression

  189 EmptyStmt: %empty

  190 ExpressionStmt: Expression

  191 IncDecStmt: Expression INC
  192           | Expression DEC

  193 Assignment: ExpressionList assign_op ExpressionList

  194 assign_op: add_op EQ
  195          | mul_op EQ
  196          | EQ


Terminals, with rules where they appear

$end (0) 0
error (256) 3 7 10 60 103 109 131
BREAK (258) 142 143
DEFAULT (259) 163 171
FUNC (260) 25 63
INTERFACE (261)
SELECT (262)
CASE (263) 162 170
DEFER (264) 188
GO (265) 139
MAP (266)
STRUCT (267)
CHAN (268)
ELSE (269) 148 149 151 152
GOTO (270) 146
PACKAGE (271) 2
SWITCH (272) 156 157 158 159 164 165
CONST (273) 45 46
FALLTHROUGH (274) 147
IF (275) 148 149 150 151 152 153
RANGE (276) 185 186 187
TYPE (277) 166 167
CONTINUE (278) 144 145
FOR (279) 174 175 176 177
IMPORT (280) 6
RETURN (281) 140 141
VAR (282) 38 39
SC (283) 1 11 39 40 46 47 148 149 150 156 157 164 180
COL (284) 137 160 168
COM (285) 32 52 54 94 96 98 100 104 172
DOTS (286) 34 36 94 95 98 99
DOT (287) 91 93 166 167
LRB (288) 15 30 31 39 46 93 94 95 96 97 98 99 100 101 102 103 108 109
    166 167
RRB (289) 15 30 31 39 46 93 94 95 96 97 98 99 100 101 102 103 108 109
    166 167
LSB (290) 20 92
RSB (291) 20 92
LCB (292) 9 10 156 157 158 159 164 165
RCB (293) 9 10 156 157 158 159 164 165
EQ (294) 42 44 49 50 185 194 195 196
ASSIGN (295) 62 166 186
STAR (296) 23 79 83
PIPE (297) 77
AND (298) 80 84
INC (299) 191
DEC (300) 192
LOG_AND (301) 72
LOG_OR (302) 71
REL_OP (303) 73
PAR_ADD_OP (304) 76 82
PAR_MUL_OP (305) 78
PAR_UNARY_OP (306) 81
INT_LIT (307) 111
FLOAT_LIT (308) 112
IMAGINARY_LIT (309) 113
RUNE_LIT (310) 114
STRING_LIT (311) 5 115
IDENTIFIER (312) 4 16 52 53 64 91 116 138 166


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
SourceFile (59)
    on left: 1, on right: 0
PackageClause (60)
    on left: 2 3, on right: 1
PackageName (61)
    on left: 4 5, on right: 2 6
ImportDecl (62)
    on left: 6 7 8, on right: 1 6
Block (63)
    on left: 9 10, on right: 65 126 148 149 150 151 152 153 174 175
    176 177
StatementList (64)
    on left: 11 12, on right: 9 11 160 168
Type (65)
    on left: 13 14 15, on right: 15 22 24 29 34 35 36 37 42 43 49 93
    98 99 100 101 172 173
TypeName (66)
    on left: 16, on right: 13
TypeLit (67)
    on left: 17 18 19, on right: 14
ArrayType (68)
    on left: 20, on right: 17
ArrayLength (69)
    on left: 21, on right: 20
ElementType (70)
    on left: 22, on right: 20
PointerType (71)
    on left: 23, on right: 18
BaseType (72)
    on left: 24, on right: 23
FunctionType (73)
    on left: 25, on right: 19
Signature (74)
    on left: 26 27, on right: 25 63
Result (75)
    on left: 28 29, on right: 26
Parameters (76)
    on left: 30 31, on right: 26 27 28
ParameterList (77)
    on left: 32 33, on right: 30 32
ParameterDecl (78)
    on left: 34 35 36 37, on right: 32 33
VarDecl (79)
    on left: 38 39, on right: 57
RepeatVarSpec (80)
    on left: 40 41, on right: 39 40
VarSpec (81)
    on left: 42 43 44, on right: 38 39 40
ConstDecl (82)
    on left: 45 46, on right: 56
RepeatConstSpec (83)
    on left: 47 48, on right: 46 47
ConstSpec (84)
    on left: 49 50 51, on right: 45 46 47
IdentifierList (85)
    on left: 52 53, on right: 34 35 42 43 44 49 50 51 52 62 186
ExpressionList (86)
    on left: 54 55, on right: 42 44 49 50 54 62 94 95 96 97 140 162
    185 193
Declaration (87)
    on left: 56 57, on right: 58 117
TopLevelDecl (88)
    on left: 58 59 60 61, on right: 1 58 59
ShortVarDecl (89)
    on left: 62, on right: 136
FuncDecl (90)
    on left: 63, on right: 59
FunctionName (91)
    on left: 64, on right: 63
FunctionBody (92)
    on left: 65 66, on right: 63
Expression (93)
    on left: 67 68, on right: 21 54 55 68 92 104 108 139 148 149 150
    151 152 153 156 158 178 185 186 187 188 190 191 192
UnaryExpr (94)
    on left: 69 70, on right: 67 70
binary_op (95)
    on left: 71 72 73 74 75, on right: 68
add_op (96)
    on left: 76 77, on right: 74 194
mul_op (97)
    on left: 78 79 80, on right: 75 195
unary_op (98)
    on left: 81 82 83 84, on right: 70
PrimaryExpr (99)
    on left: 85 86 87 88 89 90, on right: 69 87 88 89 90 166 167
Selector (100)
    on left: 91, on right: 86 87
Index (101)
    on left: 92, on right: 88
TypeAsertion (102)
    on left: 93, on right: 89
Arguments (103)
    on left: 94 95 96 97 98 99 100 101 102 103, on right: 90
OptionArguments (104)
    on left: 104 105, on right: 98 99 100 101
Operand (105)
    on left: 106 107 108 109, on right: 85
Literal (106)
    on left: 110, on right: 106
BasicLit (107)
    on left: 111 112 113 114 115, on right: 110
OperandName (108)
    on left: 116, on right: 107
Statement (109)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128 129 130
    131, on right: 11 137
SimpleStmt (110)
    on left: 132 133 134 135 136, on right: 119 148 149 150 156 157
    164 181 183
LabeledStmt (111)
    on left: 137, on right: 118
Label (112)
    on left: 138, on right: 137 142 144 146
GoStmt (113)
    on left: 139, on right: 120
ReturnStmt (114)
    on left: 140 141, on right: 121
BreakStmt (115)
    on left: 142 143, on right: 122
ContinueStmt (116)
    on left: 144 145, on right: 123
GotoStmt (117)
    on left: 146, on right: 124
FallthroughStmt (118)
    on left: 147, on right: 125
IfStmt (119)
    on left: 148 149 150 151 152 153, on right: 127 148 151
SwitchStmt (120)
    on left: 154 155, on right: 128
ExprSwitchStmt (121)
    on left: 156 157 158 159, on right: 154
ExprCaseClause (122)
    on left: 160 161, on right: 156 157 158 159 160
ExprSwitchCase (123)
    on left: 162 163, on right: 160
TypeSwitchStmt (124)
    on left: 164 165, on right: 155
TypeSwitchGuard (125)
    on left: 166 167, on right: 164 165
TypeCaseClause (126)
    on left: 168 169, on right: 164 165 168
TypeSwitchCase (127)
    on left: 170 171, on right: 168
TypeList (128)
    on left: 172 173, on right: 170 172
ForStmt (129)
    on left: 174 175 176 177, on right: 129
Condition (130)
    on left: 178 179, on right: 174 180
ForClause (131)
    on left: 180, on right: 175
InitStmt (132)
    on left: 181 182, on right: 180
PostStmt (133)
    on left: 183 184, on right: 180
RangeClause (134)
    on left: 185 186 187, on right: 176
DeferStmt (135)
    on left: 188, on right: 130
EmptyStmt (136)
    on left: 189, on right: 132
ExpressionStmt (137)
    on left: 190, on right: 133
IncDecStmt (138)
    on left: 191 192, on right: 134
Assignment (139)
    on left: 193, on right: 135
assign_op (140)
    on left: 194 195 196, on right: 193


State 0

    0 $accept: . SourceFile $end

    error    shift, and go to state 1
    PACKAGE  shift, and go to state 2

    SourceFile     go to state 3
    PackageClause  go to state 4


State 1

    3 PackageClause: error .

    $default  reduce using rule 3 (PackageClause)


State 2

    2 PackageClause: PACKAGE . PackageName

    STRING_LIT  shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    PackageName  go to state 7


State 3

    0 $accept: SourceFile . $end

    $end  shift, and go to state 8


State 4

    1 SourceFile: PackageClause . SC ImportDecl SC TopLevelDecl SC

    SC  shift, and go to state 9


State 5

    5 PackageName: STRING_LIT .

    $default  reduce using rule 5 (PackageName)


State 6

    4 PackageName: IDENTIFIER .

    $default  reduce using rule 4 (PackageName)


State 7

    2 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 2 (PackageClause)


State 8

    0 $accept: SourceFile $end .

    $default  accept


State 9

    1 SourceFile: PackageClause SC . ImportDecl SC TopLevelDecl SC

    error  shift, and go to state 10

    IMPORT  reduce using rule 8 (ImportDecl)
    SC      reduce using rule 8 (ImportDecl)

    ImportDecl  go to state 11


State 10

    7 ImportDecl: error .

    $default  reduce using rule 7 (ImportDecl)


State 11

    1 SourceFile: PackageClause SC ImportDecl . SC TopLevelDecl SC
    6 ImportDecl: ImportDecl . IMPORT PackageName

    IMPORT  shift, and go to state 12
    SC      shift, and go to state 13


State 12

    6 ImportDecl: ImportDecl IMPORT . PackageName

    STRING_LIT  shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    PackageName  go to state 14


State 13

    1 SourceFile: PackageClause SC ImportDecl SC . TopLevelDecl SC

    error  shift, and go to state 15

    FUNC   reduce using rule 61 (TopLevelDecl)
    CONST  reduce using rule 61 (TopLevelDecl)
    VAR    reduce using rule 61 (TopLevelDecl)
    SC     reduce using rule 61 (TopLevelDecl)

    TopLevelDecl  go to state 16


State 14

    6 ImportDecl: ImportDecl IMPORT PackageName .

    $default  reduce using rule 6 (ImportDecl)


State 15

   60 TopLevelDecl: error .

    $default  reduce using rule 60 (TopLevelDecl)


State 16

    1 SourceFile: PackageClause SC ImportDecl SC TopLevelDecl . SC
   58 TopLevelDecl: TopLevelDecl . Declaration
   59             | TopLevelDecl . FuncDecl

    FUNC   shift, and go to state 17
    CONST  shift, and go to state 18
    VAR    shift, and go to state 19
    SC     shift, and go to state 20

    VarDecl      go to state 21
    ConstDecl    go to state 22
    Declaration  go to state 23
    FuncDecl     go to state 24


State 17

   63 FuncDecl: FUNC . FunctionName Signature FunctionBody

    IDENTIFIER  shift, and go to state 25

    FunctionName  go to state 26


State 18

   45 ConstDecl: CONST . ConstSpec
   46          | CONST . LRB ConstSpec SC RepeatConstSpec RRB

    LRB         shift, and go to state 27
    IDENTIFIER  shift, and go to state 28

    ConstSpec       go to state 29
    IdentifierList  go to state 30


State 19

   38 VarDecl: VAR . VarSpec
   39        | VAR . LRB VarSpec SC RepeatVarSpec RRB

    LRB         shift, and go to state 31
    IDENTIFIER  shift, and go to state 28

    VarSpec         go to state 32
    IdentifierList  go to state 33


State 20

    1 SourceFile: PackageClause SC ImportDecl SC TopLevelDecl SC .

    $default  reduce using rule 1 (SourceFile)


State 21

   57 Declaration: VarDecl .

    $default  reduce using rule 57 (Declaration)


State 22

   56 Declaration: ConstDecl .

    $default  reduce using rule 56 (Declaration)


State 23

   58 TopLevelDecl: TopLevelDecl Declaration .

    $default  reduce using rule 58 (TopLevelDecl)


State 24

   59 TopLevelDecl: TopLevelDecl FuncDecl .

    $default  reduce using rule 59 (TopLevelDecl)


State 25

   64 FunctionName: IDENTIFIER .

    $default  reduce using rule 64 (FunctionName)


State 26

   63 FuncDecl: FUNC FunctionName . Signature FunctionBody

    LRB  shift, and go to state 34

    Signature   go to state 35
    Parameters  go to state 36


State 27

   46 ConstDecl: CONST LRB . ConstSpec SC RepeatConstSpec RRB

    IDENTIFIER  shift, and go to state 28

    ConstSpec       go to state 37
    IdentifierList  go to state 30


State 28

   53 IdentifierList: IDENTIFIER .

    $default  reduce using rule 53 (IdentifierList)


State 29

   45 ConstDecl: CONST ConstSpec .

    $default  reduce using rule 45 (ConstDecl)


State 30

   49 ConstSpec: IdentifierList . Type EQ ExpressionList
   50          | IdentifierList . EQ ExpressionList
   51          | IdentifierList .
   52 IdentifierList: IdentifierList . COM IDENTIFIER

    FUNC        shift, and go to state 38
    COM         shift, and go to state 39
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    EQ          shift, and go to state 42
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    FUNC      [reduce using rule 51 (ConstSpec)]
    $default  reduce using rule 51 (ConstSpec)

    Type          go to state 45
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 31

   39 VarDecl: VAR LRB . VarSpec SC RepeatVarSpec RRB

    IDENTIFIER  shift, and go to state 28

    VarSpec         go to state 51
    IdentifierList  go to state 33


State 32

   38 VarDecl: VAR VarSpec .

    $default  reduce using rule 38 (VarDecl)


State 33

   42 VarSpec: IdentifierList . Type EQ ExpressionList
   43        | IdentifierList . Type
   44        | IdentifierList . EQ ExpressionList
   52 IdentifierList: IdentifierList . COM IDENTIFIER

    FUNC        shift, and go to state 38
    COM         shift, and go to state 39
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    EQ          shift, and go to state 52
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 53
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 34

   30 Parameters: LRB . ParameterList RRB
   31           | LRB . RRB

    FUNC        shift, and go to state 38
    DOTS        shift, and go to state 54
    LRB         shift, and go to state 40
    RRB         shift, and go to state 55
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 56

    Type            go to state 57
    TypeName        go to state 46
    TypeLit         go to state 47
    ArrayType       go to state 48
    PointerType     go to state 49
    FunctionType    go to state 50
    ParameterList   go to state 58
    ParameterDecl   go to state 59
    IdentifierList  go to state 60


State 35

   63 FuncDecl: FUNC FunctionName Signature . FunctionBody

    LCB  shift, and go to state 61

    $default  reduce using rule 66 (FunctionBody)

    Block         go to state 62
    FunctionBody  go to state 63


State 36

   26 Signature: Parameters . Result
   27          | Parameters .

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 64
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    FUNC      [reduce using rule 27 (Signature)]
    $default  reduce using rule 27 (Signature)

    Type          go to state 65
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50
    Result        go to state 66
    Parameters    go to state 67


State 37

   46 ConstDecl: CONST LRB ConstSpec . SC RepeatConstSpec RRB

    SC  shift, and go to state 68


State 38

   25 FunctionType: FUNC . Signature

    LRB  shift, and go to state 34

    Signature   go to state 69
    Parameters  go to state 36


State 39

   52 IdentifierList: IdentifierList COM . IDENTIFIER

    IDENTIFIER  shift, and go to state 70


State 40

   15 Type: LRB . Type RRB

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 71
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 41

   20 ArrayType: LSB . ArrayLength RSB ElementType

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    ArrayLength  go to state 84
    Expression   go to state 85
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 42

   50 ConstSpec: IdentifierList EQ . ExpressionList

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    ExpressionList  go to state 94
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 43

   23 PointerType: STAR . BaseType

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 96
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    BaseType      go to state 97
    FunctionType  go to state 50


State 44

   16 TypeName: IDENTIFIER .

    $default  reduce using rule 16 (TypeName)


State 45

   49 ConstSpec: IdentifierList Type . EQ ExpressionList

    EQ  shift, and go to state 98


State 46

   13 Type: TypeName .

    $default  reduce using rule 13 (Type)


State 47

   14 Type: TypeLit .

    $default  reduce using rule 14 (Type)


State 48

   17 TypeLit: ArrayType .

    $default  reduce using rule 17 (TypeLit)


State 49

   18 TypeLit: PointerType .

    $default  reduce using rule 18 (TypeLit)


State 50

   19 TypeLit: FunctionType .

    $default  reduce using rule 19 (TypeLit)


State 51

   39 VarDecl: VAR LRB VarSpec . SC RepeatVarSpec RRB

    SC  shift, and go to state 99


State 52

   44 VarSpec: IdentifierList EQ . ExpressionList

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    ExpressionList  go to state 100
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 53

   42 VarSpec: IdentifierList Type . EQ ExpressionList
   43        | IdentifierList Type .

    EQ  shift, and go to state 101

    $default  reduce using rule 43 (VarSpec)


State 54

   36 ParameterDecl: DOTS . Type

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 102
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 55

   31 Parameters: LRB RRB .

    $default  reduce using rule 31 (Parameters)


State 56

   16 TypeName: IDENTIFIER .
   53 IdentifierList: IDENTIFIER .

    COM       reduce using rule 16 (TypeName)
    COM       [reduce using rule 53 (IdentifierList)]
    RRB       reduce using rule 16 (TypeName)
    $default  reduce using rule 53 (IdentifierList)


State 57

   37 ParameterDecl: Type .

    $default  reduce using rule 37 (ParameterDecl)


State 58

   30 Parameters: LRB ParameterList . RRB
   32 ParameterList: ParameterList . COM ParameterDecl

    COM  shift, and go to state 103
    RRB  shift, and go to state 104


State 59

   33 ParameterList: ParameterDecl .

    $default  reduce using rule 33 (ParameterList)


State 60

   34 ParameterDecl: IdentifierList . DOTS Type
   35              | IdentifierList . Type
   52 IdentifierList: IdentifierList . COM IDENTIFIER

    FUNC        shift, and go to state 38
    COM         shift, and go to state 39
    DOTS        shift, and go to state 105
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 106
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 61

    9 Block: LCB . StatementList RCB
   10      | LCB . error RCB

    error  shift, and go to state 107

    error          [reduce using rule 12 (StatementList)]
    BREAK          reduce using rule 12 (StatementList)
    DEFER          reduce using rule 12 (StatementList)
    GO             reduce using rule 12 (StatementList)
    GOTO           reduce using rule 12 (StatementList)
    SWITCH         reduce using rule 12 (StatementList)
    CONST          reduce using rule 12 (StatementList)
    FALLTHROUGH    reduce using rule 12 (StatementList)
    IF             reduce using rule 12 (StatementList)
    CONTINUE       reduce using rule 12 (StatementList)
    FOR            reduce using rule 12 (StatementList)
    RETURN         reduce using rule 12 (StatementList)
    VAR            reduce using rule 12 (StatementList)
    SC             reduce using rule 12 (StatementList)
    DOT            reduce using rule 12 (StatementList)
    LRB            reduce using rule 12 (StatementList)
    LCB            reduce using rule 12 (StatementList)
    RCB            reduce using rule 12 (StatementList)
    STAR           reduce using rule 12 (StatementList)
    AND            reduce using rule 12 (StatementList)
    PAR_ADD_OP     reduce using rule 12 (StatementList)
    PAR_UNARY_OP   reduce using rule 12 (StatementList)
    INT_LIT        reduce using rule 12 (StatementList)
    FLOAT_LIT      reduce using rule 12 (StatementList)
    IMAGINARY_LIT  reduce using rule 12 (StatementList)
    RUNE_LIT       reduce using rule 12 (StatementList)
    STRING_LIT     reduce using rule 12 (StatementList)
    IDENTIFIER     reduce using rule 12 (StatementList)

    StatementList  go to state 108


State 62

   65 FunctionBody: Block .

    $default  reduce using rule 65 (FunctionBody)


State 63

   63 FuncDecl: FUNC FunctionName Signature FunctionBody .

    $default  reduce using rule 63 (FuncDecl)


State 64

   15 Type: LRB . Type RRB
   30 Parameters: LRB . ParameterList RRB
   31           | LRB . RRB

    FUNC        shift, and go to state 38
    DOTS        shift, and go to state 54
    LRB         shift, and go to state 40
    RRB         shift, and go to state 55
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 56

    Type            go to state 109
    TypeName        go to state 46
    TypeLit         go to state 47
    ArrayType       go to state 48
    PointerType     go to state 49
    FunctionType    go to state 50
    ParameterList   go to state 58
    ParameterDecl   go to state 59
    IdentifierList  go to state 60


State 65

   29 Result: Type .

    $default  reduce using rule 29 (Result)


State 66

   26 Signature: Parameters Result .

    $default  reduce using rule 26 (Signature)


State 67

   28 Result: Parameters .

    $default  reduce using rule 28 (Result)


State 68

   46 ConstDecl: CONST LRB ConstSpec SC . RepeatConstSpec RRB

    $default  reduce using rule 48 (RepeatConstSpec)

    RepeatConstSpec  go to state 110


State 69

   25 FunctionType: FUNC Signature .

    $default  reduce using rule 25 (FunctionType)


State 70

   52 IdentifierList: IdentifierList COM IDENTIFIER .

    $default  reduce using rule 52 (IdentifierList)


State 71

   15 Type: LRB Type . RRB

    RRB  shift, and go to state 111


State 72

   91 Selector: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 112


State 73

  108 Operand: LRB . Expression RRB
  109        | LRB . error RRB

    error          shift, and go to state 113
    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 114
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 74

   83 unary_op: STAR .

    $default  reduce using rule 83 (unary_op)


State 75

   84 unary_op: AND .

    $default  reduce using rule 84 (unary_op)


State 76

   82 unary_op: PAR_ADD_OP .

    $default  reduce using rule 82 (unary_op)


State 77

   81 unary_op: PAR_UNARY_OP .

    $default  reduce using rule 81 (unary_op)


State 78

  111 BasicLit: INT_LIT .

    $default  reduce using rule 111 (BasicLit)


State 79

  112 BasicLit: FLOAT_LIT .

    $default  reduce using rule 112 (BasicLit)


State 80

  113 BasicLit: IMAGINARY_LIT .

    $default  reduce using rule 113 (BasicLit)


State 81

  114 BasicLit: RUNE_LIT .

    $default  reduce using rule 114 (BasicLit)


State 82

  115 BasicLit: STRING_LIT .

    $default  reduce using rule 115 (BasicLit)


State 83

  116 OperandName: IDENTIFIER .

    $default  reduce using rule 116 (OperandName)


State 84

   20 ArrayType: LSB ArrayLength . RSB ElementType

    RSB  shift, and go to state 115


State 85

   21 ArrayLength: Expression .
   68 Expression: Expression . binary_op Expression

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    $default  reduce using rule 21 (ArrayLength)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 86

   67 Expression: UnaryExpr .

    $default  reduce using rule 67 (Expression)


State 87

   70 UnaryExpr: unary_op . UnaryExpr

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    UnaryExpr    go to state 127
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 88

   69 UnaryExpr: PrimaryExpr .
   87 PrimaryExpr: PrimaryExpr . Selector
   88            | PrimaryExpr . Index
   89            | PrimaryExpr . TypeAsertion
   90            | PrimaryExpr . Arguments

    DOT  shift, and go to state 128
    LRB  shift, and go to state 129
    LSB  shift, and go to state 130

    $default  reduce using rule 69 (UnaryExpr)

    Selector      go to state 131
    Index         go to state 132
    TypeAsertion  go to state 133
    Arguments     go to state 134


State 89

   86 PrimaryExpr: Selector .

    $default  reduce using rule 86 (PrimaryExpr)


State 90

   85 PrimaryExpr: Operand .

    $default  reduce using rule 85 (PrimaryExpr)


State 91

  106 Operand: Literal .

    $default  reduce using rule 106 (Operand)


State 92

  110 Literal: BasicLit .

    $default  reduce using rule 110 (Literal)


State 93

  107 Operand: OperandName .

    $default  reduce using rule 107 (Operand)


State 94

   50 ConstSpec: IdentifierList EQ ExpressionList .
   54 ExpressionList: ExpressionList . COM Expression

    COM  shift, and go to state 135

    $default  reduce using rule 50 (ConstSpec)


State 95

   55 ExpressionList: Expression .
   68 Expression: Expression . binary_op Expression

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    $default  reduce using rule 55 (ExpressionList)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 96

   24 BaseType: Type .

    $default  reduce using rule 24 (BaseType)


State 97

   23 PointerType: STAR BaseType .

    $default  reduce using rule 23 (PointerType)


State 98

   49 ConstSpec: IdentifierList Type EQ . ExpressionList

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    ExpressionList  go to state 136
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 99

   39 VarDecl: VAR LRB VarSpec SC . RepeatVarSpec RRB

    $default  reduce using rule 41 (RepeatVarSpec)

    RepeatVarSpec  go to state 137


State 100

   44 VarSpec: IdentifierList EQ ExpressionList .
   54 ExpressionList: ExpressionList . COM Expression

    COM  shift, and go to state 135

    $default  reduce using rule 44 (VarSpec)


State 101

   42 VarSpec: IdentifierList Type EQ . ExpressionList

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    ExpressionList  go to state 138
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 102

   36 ParameterDecl: DOTS Type .

    $default  reduce using rule 36 (ParameterDecl)


State 103

   32 ParameterList: ParameterList COM . ParameterDecl

    FUNC        shift, and go to state 38
    DOTS        shift, and go to state 54
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 56

    Type            go to state 57
    TypeName        go to state 46
    TypeLit         go to state 47
    ArrayType       go to state 48
    PointerType     go to state 49
    FunctionType    go to state 50
    ParameterDecl   go to state 139
    IdentifierList  go to state 60


State 104

   30 Parameters: LRB ParameterList RRB .

    $default  reduce using rule 30 (Parameters)


State 105

   34 ParameterDecl: IdentifierList DOTS . Type

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 140
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 106

   35 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 35 (ParameterDecl)


State 107

   10 Block: LCB error . RCB

    RCB  shift, and go to state 141


State 108

    9 Block: LCB StatementList . RCB
   11 StatementList: StatementList . Statement SC

    error          shift, and go to state 142
    BREAK          shift, and go to state 143
    DEFER          shift, and go to state 144
    GO             shift, and go to state 145
    GOTO           shift, and go to state 146
    SWITCH         shift, and go to state 147
    CONST          shift, and go to state 18
    FALLTHROUGH    shift, and go to state 148
    IF             shift, and go to state 149
    CONTINUE       shift, and go to state 150
    FOR            shift, and go to state 151
    RETURN         shift, and go to state 152
    VAR            shift, and go to state 19
    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    LCB            shift, and go to state 61
    RCB            shift, and go to state 153
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 154

    SC  reduce using rule 189 (EmptyStmt)

    Block            go to state 155
    VarDecl          go to state 21
    ConstDecl        go to state 22
    IdentifierList   go to state 156
    ExpressionList   go to state 157
    Declaration      go to state 158
    ShortVarDecl     go to state 159
    Expression       go to state 160
    UnaryExpr        go to state 86
    unary_op         go to state 87
    PrimaryExpr      go to state 88
    Selector         go to state 89
    Operand          go to state 90
    Literal          go to state 91
    BasicLit         go to state 92
    OperandName      go to state 93
    Statement        go to state 161
    SimpleStmt       go to state 162
    LabeledStmt      go to state 163
    Label            go to state 164
    GoStmt           go to state 165
    ReturnStmt       go to state 166
    BreakStmt        go to state 167
    ContinueStmt     go to state 168
    GotoStmt         go to state 169
    FallthroughStmt  go to state 170
    IfStmt           go to state 171
    SwitchStmt       go to state 172
    ExprSwitchStmt   go to state 173
    TypeSwitchStmt   go to state 174
    ForStmt          go to state 175
    DeferStmt        go to state 176
    EmptyStmt        go to state 177
    ExpressionStmt   go to state 178
    IncDecStmt       go to state 179
    Assignment       go to state 180


State 109

   15 Type: LRB Type . RRB
   37 ParameterDecl: Type .

    RRB  shift, and go to state 111

    RRB       [reduce using rule 37 (ParameterDecl)]
    $default  reduce using rule 37 (ParameterDecl)


State 110

   46 ConstDecl: CONST LRB ConstSpec SC RepeatConstSpec . RRB
   47 RepeatConstSpec: RepeatConstSpec . ConstSpec SC

    RRB         shift, and go to state 181
    IDENTIFIER  shift, and go to state 28

    ConstSpec       go to state 182
    IdentifierList  go to state 30


State 111

   15 Type: LRB Type RRB .

    $default  reduce using rule 15 (Type)


State 112

   91 Selector: DOT IDENTIFIER .

    $default  reduce using rule 91 (Selector)


State 113

  109 Operand: LRB error . RRB

    RRB  shift, and go to state 183


State 114

   68 Expression: Expression . binary_op Expression
  108 Operand: LRB Expression . RRB

    RRB         shift, and go to state 184
    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 115

   20 ArrayType: LSB ArrayLength RSB . ElementType

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 185
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    ElementType   go to state 186
    PointerType   go to state 49
    FunctionType  go to state 50


State 116

   79 mul_op: STAR .

    $default  reduce using rule 79 (mul_op)


State 117

   77 add_op: PIPE .

    $default  reduce using rule 77 (add_op)


State 118

   80 mul_op: AND .

    $default  reduce using rule 80 (mul_op)


State 119

   72 binary_op: LOG_AND .

    $default  reduce using rule 72 (binary_op)


State 120

   71 binary_op: LOG_OR .

    $default  reduce using rule 71 (binary_op)


State 121

   73 binary_op: REL_OP .

    $default  reduce using rule 73 (binary_op)


State 122

   76 add_op: PAR_ADD_OP .

    $default  reduce using rule 76 (add_op)


State 123

   78 mul_op: PAR_MUL_OP .

    $default  reduce using rule 78 (mul_op)


State 124

   68 Expression: Expression binary_op . Expression

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 187
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 125

   74 binary_op: add_op .

    $default  reduce using rule 74 (binary_op)


State 126

   75 binary_op: mul_op .

    $default  reduce using rule 75 (binary_op)


State 127

   70 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 70 (UnaryExpr)


State 128

   91 Selector: DOT . IDENTIFIER
   93 TypeAsertion: DOT . LRB Type RRB

    LRB         shift, and go to state 188
    IDENTIFIER  shift, and go to state 112


State 129

   94 Arguments: LRB . ExpressionList DOTS COM RRB
   95          | LRB . ExpressionList DOTS RRB
   96          | LRB . ExpressionList COM RRB
   97          | LRB . ExpressionList RRB
   98          | LRB . Type OptionArguments DOTS COM RRB
   99          | LRB . Type OptionArguments DOTS RRB
  100          | LRB . Type OptionArguments COM RRB
  101          | LRB . Type OptionArguments RRB
  102          | LRB . RRB
  103          | LRB . error RRB

    error          shift, and go to state 189
    FUNC           shift, and go to state 38
    DOT            shift, and go to state 72
    LRB            shift, and go to state 190
    RRB            shift, and go to state 191
    LSB            shift, and go to state 41
    STAR           shift, and go to state 192
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 193

    Type            go to state 194
    TypeName        go to state 46
    TypeLit         go to state 47
    ArrayType       go to state 48
    PointerType     go to state 49
    FunctionType    go to state 50
    ExpressionList  go to state 195
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 130

   92 Index: LSB . Expression RSB

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 196
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 131

   87 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 87 (PrimaryExpr)


State 132

   88 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 88 (PrimaryExpr)


State 133

   89 PrimaryExpr: PrimaryExpr TypeAsertion .

    $default  reduce using rule 89 (PrimaryExpr)


State 134

   90 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 90 (PrimaryExpr)


State 135

   54 ExpressionList: ExpressionList COM . Expression

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 197
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 136

   49 ConstSpec: IdentifierList Type EQ ExpressionList .
   54 ExpressionList: ExpressionList . COM Expression

    COM  shift, and go to state 135

    $default  reduce using rule 49 (ConstSpec)


State 137

   39 VarDecl: VAR LRB VarSpec SC RepeatVarSpec . RRB
   40 RepeatVarSpec: RepeatVarSpec . VarSpec SC

    RRB         shift, and go to state 198
    IDENTIFIER  shift, and go to state 28

    VarSpec         go to state 199
    IdentifierList  go to state 33


State 138

   42 VarSpec: IdentifierList Type EQ ExpressionList .
   54 ExpressionList: ExpressionList . COM Expression

    COM  shift, and go to state 135

    $default  reduce using rule 42 (VarSpec)


State 139

   32 ParameterList: ParameterList COM ParameterDecl .

    $default  reduce using rule 32 (ParameterList)


State 140

   34 ParameterDecl: IdentifierList DOTS Type .

    $default  reduce using rule 34 (ParameterDecl)


State 141

   10 Block: LCB error RCB .

    $default  reduce using rule 10 (Block)


State 142

  131 Statement: error .

    $default  reduce using rule 131 (Statement)


State 143

  142 BreakStmt: BREAK . Label
  143          | BREAK .

    IDENTIFIER  shift, and go to state 200

    $default  reduce using rule 143 (BreakStmt)

    Label  go to state 201


State 144

  188 DeferStmt: DEFER . Expression

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 202
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 145

  139 GoStmt: GO . Expression

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 203
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 146

  146 GotoStmt: GOTO . Label

    IDENTIFIER  shift, and go to state 200

    Label  go to state 204


State 147

  156 ExprSwitchStmt: SWITCH . SimpleStmt SC Expression LCB ExprCaseClause RCB
  157               | SWITCH . SimpleStmt SC LCB ExprCaseClause RCB
  158               | SWITCH . Expression LCB ExprCaseClause RCB
  159               | SWITCH . LCB ExprCaseClause RCB
  164 TypeSwitchStmt: SWITCH . SimpleStmt SC TypeSwitchGuard LCB TypeCaseClause RCB
  165               | SWITCH . TypeSwitchGuard LCB TypeCaseClause RCB

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    LCB            shift, and go to state 205
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 206

    $default  reduce using rule 189 (EmptyStmt)

    IdentifierList   go to state 156
    ExpressionList   go to state 157
    ShortVarDecl     go to state 159
    Expression       go to state 207
    UnaryExpr        go to state 86
    unary_op         go to state 87
    PrimaryExpr      go to state 208
    Selector         go to state 89
    Operand          go to state 90
    Literal          go to state 91
    BasicLit         go to state 92
    OperandName      go to state 93
    SimpleStmt       go to state 209
    TypeSwitchGuard  go to state 210
    EmptyStmt        go to state 177
    ExpressionStmt   go to state 178
    IncDecStmt       go to state 179
    Assignment       go to state 180


State 148

  147 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 147 (FallthroughStmt)


State 149

  148 IfStmt: IF . SimpleStmt SC Expression Block ELSE IfStmt
  149       | IF . SimpleStmt SC Expression Block ELSE Block
  150       | IF . SimpleStmt SC Expression Block
  151       | IF . Expression Block ELSE IfStmt
  152       | IF . Expression Block ELSE Block
  153       | IF . Expression Block

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 211

    $default  reduce using rule 189 (EmptyStmt)

    IdentifierList  go to state 156
    ExpressionList  go to state 157
    ShortVarDecl    go to state 159
    Expression      go to state 212
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93
    SimpleStmt      go to state 213
    EmptyStmt       go to state 177
    ExpressionStmt  go to state 178
    IncDecStmt      go to state 179
    Assignment      go to state 180


State 150

  144 ContinueStmt: CONTINUE . Label
  145             | CONTINUE .

    IDENTIFIER  shift, and go to state 200

    $default  reduce using rule 145 (ContinueStmt)

    Label  go to state 214


State 151

  174 ForStmt: FOR . Condition Block
  175        | FOR . ForClause Block
  176        | FOR . RangeClause Block
  177        | FOR . Block

    RANGE          shift, and go to state 215
    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    LCB            shift, and go to state 61
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 211

    SC        reduce using rule 182 (InitStmt)
    SC        [reduce using rule 189 (EmptyStmt)]
    LCB       [reduce using rule 179 (Condition)]
    $default  reduce using rule 182 (InitStmt)

    Block           go to state 216
    IdentifierList  go to state 217
    ExpressionList  go to state 218
    ShortVarDecl    go to state 159
    Expression      go to state 219
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93
    SimpleStmt      go to state 220
    Condition       go to state 221
    ForClause       go to state 222
    InitStmt        go to state 223
    RangeClause     go to state 224
    EmptyStmt       go to state 177
    ExpressionStmt  go to state 178
    IncDecStmt      go to state 179
    Assignment      go to state 180


State 152

  140 ReturnStmt: RETURN . ExpressionList
  141           | RETURN .

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    $default  reduce using rule 141 (ReturnStmt)

    ExpressionList  go to state 225
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 153

    9 Block: LCB StatementList RCB .

    $default  reduce using rule 9 (Block)


State 154

   53 IdentifierList: IDENTIFIER .
  116 OperandName: IDENTIFIER .
  138 Label: IDENTIFIER .

    COL       reduce using rule 138 (Label)
    COM       reduce using rule 53 (IdentifierList)
    COM       [reduce using rule 116 (OperandName)]
    ASSIGN    reduce using rule 53 (IdentifierList)
    $default  reduce using rule 116 (OperandName)


State 155

  126 Statement: Block .

    $default  reduce using rule 126 (Statement)


State 156

   52 IdentifierList: IdentifierList . COM IDENTIFIER
   62 ShortVarDecl: IdentifierList . ASSIGN ExpressionList

    COM     shift, and go to state 39
    ASSIGN  shift, and go to state 226


State 157

   54 ExpressionList: ExpressionList . COM Expression
  193 Assignment: ExpressionList . assign_op ExpressionList

    COM         shift, and go to state 135
    EQ          shift, and go to state 227
    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    add_op     go to state 228
    mul_op     go to state 229
    assign_op  go to state 230


State 158

  117 Statement: Declaration .

    $default  reduce using rule 117 (Statement)


State 159

  136 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 136 (SimpleStmt)


State 160

   55 ExpressionList: Expression .
   68 Expression: Expression . binary_op Expression
  190 ExpressionStmt: Expression .
  191 IncDecStmt: Expression . INC
  192           | Expression . DEC

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    INC         shift, and go to state 231
    DEC         shift, and go to state 232
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    SC          reduce using rule 190 (ExpressionStmt)
    LCB         reduce using rule 190 (ExpressionStmt)
    STAR        [reduce using rule 55 (ExpressionList)]
    PIPE        [reduce using rule 55 (ExpressionList)]
    AND         [reduce using rule 55 (ExpressionList)]
    PAR_ADD_OP  [reduce using rule 55 (ExpressionList)]
    PAR_MUL_OP  [reduce using rule 55 (ExpressionList)]
    $default    reduce using rule 55 (ExpressionList)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 161

   11 StatementList: StatementList Statement . SC

    SC  shift, and go to state 233


State 162

  119 Statement: SimpleStmt .

    $default  reduce using rule 119 (Statement)


State 163

  118 Statement: LabeledStmt .

    $default  reduce using rule 118 (Statement)


State 164

  137 LabeledStmt: Label . COL Statement

    COL  shift, and go to state 234


State 165

  120 Statement: GoStmt .

    $default  reduce using rule 120 (Statement)


State 166

  121 Statement: ReturnStmt .

    $default  reduce using rule 121 (Statement)


State 167

  122 Statement: BreakStmt .

    $default  reduce using rule 122 (Statement)


State 168

  123 Statement: ContinueStmt .

    $default  reduce using rule 123 (Statement)


State 169

  124 Statement: GotoStmt .

    $default  reduce using rule 124 (Statement)


State 170

  125 Statement: FallthroughStmt .

    $default  reduce using rule 125 (Statement)


State 171

  127 Statement: IfStmt .

    $default  reduce using rule 127 (Statement)


State 172

  128 Statement: SwitchStmt .

    $default  reduce using rule 128 (Statement)


State 173

  154 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 154 (SwitchStmt)


State 174

  155 SwitchStmt: TypeSwitchStmt .

    $default  reduce using rule 155 (SwitchStmt)


State 175

  129 Statement: ForStmt .

    $default  reduce using rule 129 (Statement)


State 176

  130 Statement: DeferStmt .

    $default  reduce using rule 130 (Statement)


State 177

  132 SimpleStmt: EmptyStmt .

    $default  reduce using rule 132 (SimpleStmt)


State 178

  133 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 133 (SimpleStmt)


State 179

  134 SimpleStmt: IncDecStmt .

    $default  reduce using rule 134 (SimpleStmt)


State 180

  135 SimpleStmt: Assignment .

    $default  reduce using rule 135 (SimpleStmt)


State 181

   46 ConstDecl: CONST LRB ConstSpec SC RepeatConstSpec RRB .

    $default  reduce using rule 46 (ConstDecl)


State 182

   47 RepeatConstSpec: RepeatConstSpec ConstSpec . SC

    SC  shift, and go to state 235


State 183

  109 Operand: LRB error RRB .

    $default  reduce using rule 109 (Operand)


State 184

  108 Operand: LRB Expression RRB .

    $default  reduce using rule 108 (Operand)


State 185

   22 ElementType: Type .

    $default  reduce using rule 22 (ElementType)


State 186

   20 ArrayType: LSB ArrayLength RSB ElementType .

    $default  reduce using rule 20 (ArrayType)


State 187

   68 Expression: Expression . binary_op Expression
   68           | Expression binary_op Expression .

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    STAR        [reduce using rule 68 (Expression)]
    PIPE        [reduce using rule 68 (Expression)]
    AND         [reduce using rule 68 (Expression)]
    LOG_AND     [reduce using rule 68 (Expression)]
    LOG_OR      [reduce using rule 68 (Expression)]
    REL_OP      [reduce using rule 68 (Expression)]
    PAR_ADD_OP  [reduce using rule 68 (Expression)]
    PAR_MUL_OP  [reduce using rule 68 (Expression)]
    $default    reduce using rule 68 (Expression)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 188

   93 TypeAsertion: DOT LRB . Type RRB

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 236
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 189

  103 Arguments: LRB error . RRB

    RRB  shift, and go to state 237


State 190

   15 Type: LRB . Type RRB
  108 Operand: LRB . Expression RRB
  109        | LRB . error RRB

    error          shift, and go to state 113
    FUNC           shift, and go to state 38
    DOT            shift, and go to state 72
    LRB            shift, and go to state 190
    LSB            shift, and go to state 41
    STAR           shift, and go to state 192
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 193

    Type          go to state 71
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50
    Expression    go to state 114
    UnaryExpr     go to state 86
    unary_op      go to state 87
    PrimaryExpr   go to state 88
    Selector      go to state 89
    Operand       go to state 90
    Literal       go to state 91
    BasicLit      go to state 92
    OperandName   go to state 93


State 191

  102 Arguments: LRB RRB .

    $default  reduce using rule 102 (Arguments)


State 192

   23 PointerType: STAR . BaseType
   83 unary_op: STAR .

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    LRB         [reduce using rule 83 (unary_op)]
    STAR        [reduce using rule 83 (unary_op)]
    IDENTIFIER  [reduce using rule 83 (unary_op)]
    $default    reduce using rule 83 (unary_op)

    Type          go to state 96
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    BaseType      go to state 97
    FunctionType  go to state 50


State 193

   16 TypeName: IDENTIFIER .
  116 OperandName: IDENTIFIER .

    COM       reduce using rule 16 (TypeName)
    COM       [reduce using rule 116 (OperandName)]
    DOTS      reduce using rule 16 (TypeName)
    DOTS      [reduce using rule 116 (OperandName)]
    RRB       reduce using rule 16 (TypeName)
    RRB       [reduce using rule 116 (OperandName)]
    $default  reduce using rule 116 (OperandName)


State 194

   98 Arguments: LRB Type . OptionArguments DOTS COM RRB
   99          | LRB Type . OptionArguments DOTS RRB
  100          | LRB Type . OptionArguments COM RRB
  101          | LRB Type . OptionArguments RRB

    COM  shift, and go to state 238

    COM       [reduce using rule 105 (OptionArguments)]
    $default  reduce using rule 105 (OptionArguments)

    OptionArguments  go to state 239


State 195

   54 ExpressionList: ExpressionList . COM Expression
   94 Arguments: LRB ExpressionList . DOTS COM RRB
   95          | LRB ExpressionList . DOTS RRB
   96          | LRB ExpressionList . COM RRB
   97          | LRB ExpressionList . RRB

    COM   shift, and go to state 240
    DOTS  shift, and go to state 241
    RRB   shift, and go to state 242


State 196

   68 Expression: Expression . binary_op Expression
   92 Index: LSB Expression . RSB

    RSB         shift, and go to state 243
    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 197

   54 ExpressionList: ExpressionList COM Expression .
   68 Expression: Expression . binary_op Expression

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    STAR        [reduce using rule 54 (ExpressionList)]
    PIPE        [reduce using rule 54 (ExpressionList)]
    AND         [reduce using rule 54 (ExpressionList)]
    PAR_ADD_OP  [reduce using rule 54 (ExpressionList)]
    PAR_MUL_OP  [reduce using rule 54 (ExpressionList)]
    $default    reduce using rule 54 (ExpressionList)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 198

   39 VarDecl: VAR LRB VarSpec SC RepeatVarSpec RRB .

    $default  reduce using rule 39 (VarDecl)


State 199

   40 RepeatVarSpec: RepeatVarSpec VarSpec . SC

    SC  shift, and go to state 244


State 200

  138 Label: IDENTIFIER .

    $default  reduce using rule 138 (Label)


State 201

  142 BreakStmt: BREAK Label .

    $default  reduce using rule 142 (BreakStmt)


State 202

   68 Expression: Expression . binary_op Expression
  188 DeferStmt: DEFER Expression .

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    $default  reduce using rule 188 (DeferStmt)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 203

   68 Expression: Expression . binary_op Expression
  139 GoStmt: GO Expression .

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    $default  reduce using rule 139 (GoStmt)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 204

  146 GotoStmt: GOTO Label .

    $default  reduce using rule 146 (GotoStmt)


State 205

  159 ExprSwitchStmt: SWITCH LCB . ExprCaseClause RCB

    $default  reduce using rule 161 (ExprCaseClause)

    ExprCaseClause  go to state 245


State 206

   53 IdentifierList: IDENTIFIER .
  116 OperandName: IDENTIFIER .
  166 TypeSwitchGuard: IDENTIFIER . ASSIGN PrimaryExpr DOT LRB TYPE RRB

    ASSIGN  shift, and go to state 246

    COM       reduce using rule 53 (IdentifierList)
    COM       [reduce using rule 116 (OperandName)]
    ASSIGN    [reduce using rule 53 (IdentifierList)]
    $default  reduce using rule 116 (OperandName)


State 207

   55 ExpressionList: Expression .
   68 Expression: Expression . binary_op Expression
  158 ExprSwitchStmt: SWITCH Expression . LCB ExprCaseClause RCB
  190 ExpressionStmt: Expression .
  191 IncDecStmt: Expression . INC
  192           | Expression . DEC

    LCB         shift, and go to state 247
    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    INC         shift, and go to state 231
    DEC         shift, and go to state 232
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    SC          reduce using rule 190 (ExpressionStmt)
    STAR        [reduce using rule 55 (ExpressionList)]
    PIPE        [reduce using rule 55 (ExpressionList)]
    AND         [reduce using rule 55 (ExpressionList)]
    PAR_ADD_OP  [reduce using rule 55 (ExpressionList)]
    PAR_MUL_OP  [reduce using rule 55 (ExpressionList)]
    $default    reduce using rule 55 (ExpressionList)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 208

   69 UnaryExpr: PrimaryExpr .
   87 PrimaryExpr: PrimaryExpr . Selector
   88            | PrimaryExpr . Index
   89            | PrimaryExpr . TypeAsertion
   90            | PrimaryExpr . Arguments
  167 TypeSwitchGuard: PrimaryExpr . DOT LRB TYPE RRB

    DOT  shift, and go to state 248
    LRB  shift, and go to state 129
    LSB  shift, and go to state 130

    $default  reduce using rule 69 (UnaryExpr)

    Selector      go to state 131
    Index         go to state 132
    TypeAsertion  go to state 133
    Arguments     go to state 134


State 209

  156 ExprSwitchStmt: SWITCH SimpleStmt . SC Expression LCB ExprCaseClause RCB
  157               | SWITCH SimpleStmt . SC LCB ExprCaseClause RCB
  164 TypeSwitchStmt: SWITCH SimpleStmt . SC TypeSwitchGuard LCB TypeCaseClause RCB

    SC  shift, and go to state 249


State 210

  165 TypeSwitchStmt: SWITCH TypeSwitchGuard . LCB TypeCaseClause RCB

    LCB  shift, and go to state 250


State 211

   53 IdentifierList: IDENTIFIER .
  116 OperandName: IDENTIFIER .

    COM       reduce using rule 53 (IdentifierList)
    COM       [reduce using rule 116 (OperandName)]
    ASSIGN    reduce using rule 53 (IdentifierList)
    $default  reduce using rule 116 (OperandName)


State 212

   55 ExpressionList: Expression .
   68 Expression: Expression . binary_op Expression
  151 IfStmt: IF Expression . Block ELSE IfStmt
  152       | IF Expression . Block ELSE Block
  153       | IF Expression . Block
  190 ExpressionStmt: Expression .
  191 IncDecStmt: Expression . INC
  192           | Expression . DEC

    LCB         shift, and go to state 61
    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    INC         shift, and go to state 231
    DEC         shift, and go to state 232
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    SC          reduce using rule 190 (ExpressionStmt)
    STAR        [reduce using rule 55 (ExpressionList)]
    PIPE        [reduce using rule 55 (ExpressionList)]
    AND         [reduce using rule 55 (ExpressionList)]
    PAR_ADD_OP  [reduce using rule 55 (ExpressionList)]
    PAR_MUL_OP  [reduce using rule 55 (ExpressionList)]
    $default    reduce using rule 55 (ExpressionList)

    Block      go to state 251
    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 213

  148 IfStmt: IF SimpleStmt . SC Expression Block ELSE IfStmt
  149       | IF SimpleStmt . SC Expression Block ELSE Block
  150       | IF SimpleStmt . SC Expression Block

    SC  shift, and go to state 252


State 214

  144 ContinueStmt: CONTINUE Label .

    $default  reduce using rule 144 (ContinueStmt)


State 215

  187 RangeClause: RANGE . Expression

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 253
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 216

  177 ForStmt: FOR Block .

    $default  reduce using rule 177 (ForStmt)


State 217

   52 IdentifierList: IdentifierList . COM IDENTIFIER
   62 ShortVarDecl: IdentifierList . ASSIGN ExpressionList
  186 RangeClause: IdentifierList . ASSIGN RANGE Expression

    COM     shift, and go to state 39
    ASSIGN  shift, and go to state 254


State 218

   54 ExpressionList: ExpressionList . COM Expression
  185 RangeClause: ExpressionList . EQ RANGE Expression
  193 Assignment: ExpressionList . assign_op ExpressionList

    COM         shift, and go to state 135
    EQ          shift, and go to state 255
    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    add_op     go to state 228
    mul_op     go to state 229
    assign_op  go to state 230


State 219

   55 ExpressionList: Expression .
   68 Expression: Expression . binary_op Expression
  178 Condition: Expression .
  190 ExpressionStmt: Expression .
  191 IncDecStmt: Expression . INC
  192           | Expression . DEC

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    INC         shift, and go to state 231
    DEC         shift, and go to state 232
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    SC          reduce using rule 190 (ExpressionStmt)
    LCB         reduce using rule 178 (Condition)
    STAR        [reduce using rule 55 (ExpressionList)]
    PIPE        [reduce using rule 55 (ExpressionList)]
    AND         [reduce using rule 55 (ExpressionList)]
    PAR_ADD_OP  [reduce using rule 55 (ExpressionList)]
    PAR_MUL_OP  [reduce using rule 55 (ExpressionList)]
    $default    reduce using rule 55 (ExpressionList)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 220

  181 InitStmt: SimpleStmt .

    $default  reduce using rule 181 (InitStmt)


State 221

  174 ForStmt: FOR Condition . Block

    LCB  shift, and go to state 61

    Block  go to state 256


State 222

  175 ForStmt: FOR ForClause . Block

    LCB  shift, and go to state 61

    Block  go to state 257


State 223

  180 ForClause: InitStmt . SC Condition SC PostStmt

    SC  shift, and go to state 258


State 224

  176 ForStmt: FOR RangeClause . Block

    LCB  shift, and go to state 61

    Block  go to state 259


State 225

   54 ExpressionList: ExpressionList . COM Expression
  140 ReturnStmt: RETURN ExpressionList .

    COM  shift, and go to state 135

    $default  reduce using rule 140 (ReturnStmt)


State 226

   62 ShortVarDecl: IdentifierList ASSIGN . ExpressionList

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    ExpressionList  go to state 260
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 227

  196 assign_op: EQ .

    $default  reduce using rule 196 (assign_op)


State 228

  194 assign_op: add_op . EQ

    EQ  shift, and go to state 261


State 229

  195 assign_op: mul_op . EQ

    EQ  shift, and go to state 262


State 230

  193 Assignment: ExpressionList assign_op . ExpressionList

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    ExpressionList  go to state 263
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 231

  191 IncDecStmt: Expression INC .

    $default  reduce using rule 191 (IncDecStmt)


State 232

  192 IncDecStmt: Expression DEC .

    $default  reduce using rule 192 (IncDecStmt)


State 233

   11 StatementList: StatementList Statement SC .

    $default  reduce using rule 11 (StatementList)


State 234

  137 LabeledStmt: Label COL . Statement

    error          shift, and go to state 142
    BREAK          shift, and go to state 143
    DEFER          shift, and go to state 144
    GO             shift, and go to state 145
    GOTO           shift, and go to state 146
    SWITCH         shift, and go to state 147
    CONST          shift, and go to state 18
    FALLTHROUGH    shift, and go to state 148
    IF             shift, and go to state 149
    CONTINUE       shift, and go to state 150
    FOR            shift, and go to state 151
    RETURN         shift, and go to state 152
    VAR            shift, and go to state 19
    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    LCB            shift, and go to state 61
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 154

    SC  reduce using rule 189 (EmptyStmt)

    Block            go to state 155
    VarDecl          go to state 21
    ConstDecl        go to state 22
    IdentifierList   go to state 156
    ExpressionList   go to state 157
    Declaration      go to state 158
    ShortVarDecl     go to state 159
    Expression       go to state 160
    UnaryExpr        go to state 86
    unary_op         go to state 87
    PrimaryExpr      go to state 88
    Selector         go to state 89
    Operand          go to state 90
    Literal          go to state 91
    BasicLit         go to state 92
    OperandName      go to state 93
    Statement        go to state 264
    SimpleStmt       go to state 162
    LabeledStmt      go to state 163
    Label            go to state 164
    GoStmt           go to state 165
    ReturnStmt       go to state 166
    BreakStmt        go to state 167
    ContinueStmt     go to state 168
    GotoStmt         go to state 169
    FallthroughStmt  go to state 170
    IfStmt           go to state 171
    SwitchStmt       go to state 172
    ExprSwitchStmt   go to state 173
    TypeSwitchStmt   go to state 174
    ForStmt          go to state 175
    DeferStmt        go to state 176
    EmptyStmt        go to state 177
    ExpressionStmt   go to state 178
    IncDecStmt       go to state 179
    Assignment       go to state 180


State 235

   47 RepeatConstSpec: RepeatConstSpec ConstSpec SC .

    $default  reduce using rule 47 (RepeatConstSpec)


State 236

   93 TypeAsertion: DOT LRB Type . RRB

    RRB  shift, and go to state 265


State 237

  103 Arguments: LRB error RRB .

    $default  reduce using rule 103 (Arguments)


State 238

  104 OptionArguments: COM . Expression

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 266
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 239

   98 Arguments: LRB Type OptionArguments . DOTS COM RRB
   99          | LRB Type OptionArguments . DOTS RRB
  100          | LRB Type OptionArguments . COM RRB
  101          | LRB Type OptionArguments . RRB

    COM   shift, and go to state 267
    DOTS  shift, and go to state 268
    RRB   shift, and go to state 269


State 240

   54 ExpressionList: ExpressionList COM . Expression
   96 Arguments: LRB ExpressionList COM . RRB

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    RRB            shift, and go to state 270
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 197
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 241

   94 Arguments: LRB ExpressionList DOTS . COM RRB
   95          | LRB ExpressionList DOTS . RRB

    COM  shift, and go to state 271
    RRB  shift, and go to state 272


State 242

   97 Arguments: LRB ExpressionList RRB .

    $default  reduce using rule 97 (Arguments)


State 243

   92 Index: LSB Expression RSB .

    $default  reduce using rule 92 (Index)


State 244

   40 RepeatVarSpec: RepeatVarSpec VarSpec SC .

    $default  reduce using rule 40 (RepeatVarSpec)


State 245

  159 ExprSwitchStmt: SWITCH LCB ExprCaseClause . RCB
  160 ExprCaseClause: ExprCaseClause . ExprSwitchCase COL StatementList

    DEFAULT  shift, and go to state 273
    CASE     shift, and go to state 274
    RCB      shift, and go to state 275

    ExprSwitchCase  go to state 276


State 246

  166 TypeSwitchGuard: IDENTIFIER ASSIGN . PrimaryExpr DOT LRB TYPE RRB

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    PrimaryExpr  go to state 277
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 247

  158 ExprSwitchStmt: SWITCH Expression LCB . ExprCaseClause RCB

    $default  reduce using rule 161 (ExprCaseClause)

    ExprCaseClause  go to state 278


State 248

   91 Selector: DOT . IDENTIFIER
   93 TypeAsertion: DOT . LRB Type RRB
  167 TypeSwitchGuard: PrimaryExpr DOT . LRB TYPE RRB

    LRB         shift, and go to state 279
    IDENTIFIER  shift, and go to state 112


State 249

  156 ExprSwitchStmt: SWITCH SimpleStmt SC . Expression LCB ExprCaseClause RCB
  157               | SWITCH SimpleStmt SC . LCB ExprCaseClause RCB
  164 TypeSwitchStmt: SWITCH SimpleStmt SC . TypeSwitchGuard LCB TypeCaseClause RCB

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    LCB            shift, and go to state 280
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 281

    Expression       go to state 282
    UnaryExpr        go to state 86
    unary_op         go to state 87
    PrimaryExpr      go to state 208
    Selector         go to state 89
    Operand          go to state 90
    Literal          go to state 91
    BasicLit         go to state 92
    OperandName      go to state 93
    TypeSwitchGuard  go to state 283


State 250

  165 TypeSwitchStmt: SWITCH TypeSwitchGuard LCB . TypeCaseClause RCB

    $default  reduce using rule 169 (TypeCaseClause)

    TypeCaseClause  go to state 284


State 251

  151 IfStmt: IF Expression Block . ELSE IfStmt
  152       | IF Expression Block . ELSE Block
  153       | IF Expression Block .

    ELSE  shift, and go to state 285

    $default  reduce using rule 153 (IfStmt)


State 252

  148 IfStmt: IF SimpleStmt SC . Expression Block ELSE IfStmt
  149       | IF SimpleStmt SC . Expression Block ELSE Block
  150       | IF SimpleStmt SC . Expression Block

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 286
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 253

   68 Expression: Expression . binary_op Expression
  187 RangeClause: RANGE Expression .

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    $default  reduce using rule 187 (RangeClause)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 254

   62 ShortVarDecl: IdentifierList ASSIGN . ExpressionList
  186 RangeClause: IdentifierList ASSIGN . RANGE Expression

    RANGE          shift, and go to state 287
    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    ExpressionList  go to state 260
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 255

  185 RangeClause: ExpressionList EQ . RANGE Expression
  196 assign_op: EQ .

    RANGE  shift, and go to state 288

    $default  reduce using rule 196 (assign_op)


State 256

  174 ForStmt: FOR Condition Block .

    $default  reduce using rule 174 (ForStmt)


State 257

  175 ForStmt: FOR ForClause Block .

    $default  reduce using rule 175 (ForStmt)


State 258

  180 ForClause: InitStmt SC . Condition SC PostStmt

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    $default  reduce using rule 179 (Condition)

    Expression   go to state 289
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93
    Condition    go to state 290


State 259

  176 ForStmt: FOR RangeClause Block .

    $default  reduce using rule 176 (ForStmt)


State 260

   54 ExpressionList: ExpressionList . COM Expression
   62 ShortVarDecl: IdentifierList ASSIGN ExpressionList .

    COM  shift, and go to state 135

    $default  reduce using rule 62 (ShortVarDecl)


State 261

  194 assign_op: add_op EQ .

    $default  reduce using rule 194 (assign_op)


State 262

  195 assign_op: mul_op EQ .

    $default  reduce using rule 195 (assign_op)


State 263

   54 ExpressionList: ExpressionList . COM Expression
  193 Assignment: ExpressionList assign_op ExpressionList .

    COM  shift, and go to state 135

    $default  reduce using rule 193 (Assignment)


State 264

  137 LabeledStmt: Label COL Statement .

    $default  reduce using rule 137 (LabeledStmt)


State 265

   93 TypeAsertion: DOT LRB Type RRB .

    $default  reduce using rule 93 (TypeAsertion)


State 266

   68 Expression: Expression . binary_op Expression
  104 OptionArguments: COM Expression .

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    $default  reduce using rule 104 (OptionArguments)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 267

  100 Arguments: LRB Type OptionArguments COM . RRB

    RRB  shift, and go to state 291


State 268

   98 Arguments: LRB Type OptionArguments DOTS . COM RRB
   99          | LRB Type OptionArguments DOTS . RRB

    COM  shift, and go to state 292
    RRB  shift, and go to state 293


State 269

  101 Arguments: LRB Type OptionArguments RRB .

    $default  reduce using rule 101 (Arguments)


State 270

   96 Arguments: LRB ExpressionList COM RRB .

    $default  reduce using rule 96 (Arguments)


State 271

   94 Arguments: LRB ExpressionList DOTS COM . RRB

    RRB  shift, and go to state 294


State 272

   95 Arguments: LRB ExpressionList DOTS RRB .

    $default  reduce using rule 95 (Arguments)


State 273

  163 ExprSwitchCase: DEFAULT .

    $default  reduce using rule 163 (ExprSwitchCase)


State 274

  162 ExprSwitchCase: CASE . ExpressionList

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    ExpressionList  go to state 295
    Expression      go to state 95
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93


State 275

  159 ExprSwitchStmt: SWITCH LCB ExprCaseClause RCB .

    $default  reduce using rule 159 (ExprSwitchStmt)


State 276

  160 ExprCaseClause: ExprCaseClause ExprSwitchCase . COL StatementList

    COL  shift, and go to state 296


State 277

   87 PrimaryExpr: PrimaryExpr . Selector
   88            | PrimaryExpr . Index
   89            | PrimaryExpr . TypeAsertion
   90            | PrimaryExpr . Arguments
  166 TypeSwitchGuard: IDENTIFIER ASSIGN PrimaryExpr . DOT LRB TYPE RRB

    DOT  shift, and go to state 297
    LRB  shift, and go to state 129
    LSB  shift, and go to state 130

    Selector      go to state 131
    Index         go to state 132
    TypeAsertion  go to state 133
    Arguments     go to state 134


State 278

  158 ExprSwitchStmt: SWITCH Expression LCB ExprCaseClause . RCB
  160 ExprCaseClause: ExprCaseClause . ExprSwitchCase COL StatementList

    DEFAULT  shift, and go to state 273
    CASE     shift, and go to state 274
    RCB      shift, and go to state 298

    ExprSwitchCase  go to state 276


State 279

   93 TypeAsertion: DOT LRB . Type RRB
  167 TypeSwitchGuard: PrimaryExpr DOT LRB . TYPE RRB

    FUNC        shift, and go to state 38
    TYPE        shift, and go to state 299
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 236
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 280

  157 ExprSwitchStmt: SWITCH SimpleStmt SC LCB . ExprCaseClause RCB

    $default  reduce using rule 161 (ExprCaseClause)

    ExprCaseClause  go to state 300


State 281

  116 OperandName: IDENTIFIER .
  166 TypeSwitchGuard: IDENTIFIER . ASSIGN PrimaryExpr DOT LRB TYPE RRB

    ASSIGN  shift, and go to state 246

    $default  reduce using rule 116 (OperandName)


State 282

   68 Expression: Expression . binary_op Expression
  156 ExprSwitchStmt: SWITCH SimpleStmt SC Expression . LCB ExprCaseClause RCB

    LCB         shift, and go to state 301
    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 283

  164 TypeSwitchStmt: SWITCH SimpleStmt SC TypeSwitchGuard . LCB TypeCaseClause RCB

    LCB  shift, and go to state 302


State 284

  165 TypeSwitchStmt: SWITCH TypeSwitchGuard LCB TypeCaseClause . RCB
  168 TypeCaseClause: TypeCaseClause . TypeSwitchCase COL StatementList

    DEFAULT  shift, and go to state 303
    CASE     shift, and go to state 304
    RCB      shift, and go to state 305

    TypeSwitchCase  go to state 306


State 285

  151 IfStmt: IF Expression Block ELSE . IfStmt
  152       | IF Expression Block ELSE . Block

    IF   shift, and go to state 149
    LCB  shift, and go to state 61

    Block   go to state 307
    IfStmt  go to state 308


State 286

   68 Expression: Expression . binary_op Expression
  148 IfStmt: IF SimpleStmt SC Expression . Block ELSE IfStmt
  149       | IF SimpleStmt SC Expression . Block ELSE Block
  150       | IF SimpleStmt SC Expression . Block

    LCB         shift, and go to state 61
    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    Block      go to state 309
    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 287

  186 RangeClause: IdentifierList ASSIGN RANGE . Expression

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 310
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 288

  185 RangeClause: ExpressionList EQ RANGE . Expression

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 83

    Expression   go to state 311
    UnaryExpr    go to state 86
    unary_op     go to state 87
    PrimaryExpr  go to state 88
    Selector     go to state 89
    Operand      go to state 90
    Literal      go to state 91
    BasicLit     go to state 92
    OperandName  go to state 93


State 289

   68 Expression: Expression . binary_op Expression
  178 Condition: Expression .

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    $default  reduce using rule 178 (Condition)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 290

  180 ForClause: InitStmt SC Condition . SC PostStmt

    SC  shift, and go to state 312


State 291

  100 Arguments: LRB Type OptionArguments COM RRB .

    $default  reduce using rule 100 (Arguments)


State 292

   98 Arguments: LRB Type OptionArguments DOTS COM . RRB

    RRB  shift, and go to state 313


State 293

   99 Arguments: LRB Type OptionArguments DOTS RRB .

    $default  reduce using rule 99 (Arguments)


State 294

   94 Arguments: LRB ExpressionList DOTS COM RRB .

    $default  reduce using rule 94 (Arguments)


State 295

   54 ExpressionList: ExpressionList . COM Expression
  162 ExprSwitchCase: CASE ExpressionList .

    COM  shift, and go to state 135

    $default  reduce using rule 162 (ExprSwitchCase)


State 296

  160 ExprCaseClause: ExprCaseClause ExprSwitchCase COL . StatementList

    $default  reduce using rule 12 (StatementList)

    StatementList  go to state 314


State 297

   91 Selector: DOT . IDENTIFIER
   93 TypeAsertion: DOT . LRB Type RRB
  166 TypeSwitchGuard: IDENTIFIER ASSIGN PrimaryExpr DOT . LRB TYPE RRB

    LRB         shift, and go to state 315
    IDENTIFIER  shift, and go to state 112


State 298

  158 ExprSwitchStmt: SWITCH Expression LCB ExprCaseClause RCB .

    $default  reduce using rule 158 (ExprSwitchStmt)


State 299

  167 TypeSwitchGuard: PrimaryExpr DOT LRB TYPE . RRB

    RRB  shift, and go to state 316


State 300

  157 ExprSwitchStmt: SWITCH SimpleStmt SC LCB ExprCaseClause . RCB
  160 ExprCaseClause: ExprCaseClause . ExprSwitchCase COL StatementList

    DEFAULT  shift, and go to state 273
    CASE     shift, and go to state 274
    RCB      shift, and go to state 317

    ExprSwitchCase  go to state 276


State 301

  156 ExprSwitchStmt: SWITCH SimpleStmt SC Expression LCB . ExprCaseClause RCB

    $default  reduce using rule 161 (ExprCaseClause)

    ExprCaseClause  go to state 318


State 302

  164 TypeSwitchStmt: SWITCH SimpleStmt SC TypeSwitchGuard LCB . TypeCaseClause RCB

    $default  reduce using rule 169 (TypeCaseClause)

    TypeCaseClause  go to state 319


State 303

  171 TypeSwitchCase: DEFAULT .

    $default  reduce using rule 171 (TypeSwitchCase)


State 304

  170 TypeSwitchCase: CASE . TypeList

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 320
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50
    TypeList      go to state 321


State 305

  165 TypeSwitchStmt: SWITCH TypeSwitchGuard LCB TypeCaseClause RCB .

    $default  reduce using rule 165 (TypeSwitchStmt)


State 306

  168 TypeCaseClause: TypeCaseClause TypeSwitchCase . COL StatementList

    COL  shift, and go to state 322


State 307

  152 IfStmt: IF Expression Block ELSE Block .

    $default  reduce using rule 152 (IfStmt)


State 308

  151 IfStmt: IF Expression Block ELSE IfStmt .

    $default  reduce using rule 151 (IfStmt)


State 309

  148 IfStmt: IF SimpleStmt SC Expression Block . ELSE IfStmt
  149       | IF SimpleStmt SC Expression Block . ELSE Block
  150       | IF SimpleStmt SC Expression Block .

    ELSE  shift, and go to state 323

    $default  reduce using rule 150 (IfStmt)


State 310

   68 Expression: Expression . binary_op Expression
  186 RangeClause: IdentifierList ASSIGN RANGE Expression .

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    $default  reduce using rule 186 (RangeClause)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 311

   68 Expression: Expression . binary_op Expression
  185 RangeClause: ExpressionList EQ RANGE Expression .

    STAR        shift, and go to state 116
    PIPE        shift, and go to state 117
    AND         shift, and go to state 118
    LOG_AND     shift, and go to state 119
    LOG_OR      shift, and go to state 120
    REL_OP      shift, and go to state 121
    PAR_ADD_OP  shift, and go to state 122
    PAR_MUL_OP  shift, and go to state 123

    $default  reduce using rule 185 (RangeClause)

    binary_op  go to state 124
    add_op     go to state 125
    mul_op     go to state 126


State 312

  180 ForClause: InitStmt SC Condition SC . PostStmt

    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 211

    LCB       reduce using rule 184 (PostStmt)
    LCB       [reduce using rule 189 (EmptyStmt)]
    $default  reduce using rule 184 (PostStmt)

    IdentifierList  go to state 156
    ExpressionList  go to state 157
    ShortVarDecl    go to state 159
    Expression      go to state 160
    UnaryExpr       go to state 86
    unary_op        go to state 87
    PrimaryExpr     go to state 88
    Selector        go to state 89
    Operand         go to state 90
    Literal         go to state 91
    BasicLit        go to state 92
    OperandName     go to state 93
    SimpleStmt      go to state 324
    PostStmt        go to state 325
    EmptyStmt       go to state 177
    ExpressionStmt  go to state 178
    IncDecStmt      go to state 179
    Assignment      go to state 180


State 313

   98 Arguments: LRB Type OptionArguments DOTS COM RRB .

    $default  reduce using rule 98 (Arguments)


State 314

   11 StatementList: StatementList . Statement SC
  160 ExprCaseClause: ExprCaseClause ExprSwitchCase COL StatementList .

    error          shift, and go to state 142
    BREAK          shift, and go to state 143
    DEFER          shift, and go to state 144
    GO             shift, and go to state 145
    GOTO           shift, and go to state 146
    SWITCH         shift, and go to state 147
    CONST          shift, and go to state 18
    FALLTHROUGH    shift, and go to state 148
    IF             shift, and go to state 149
    CONTINUE       shift, and go to state 150
    FOR            shift, and go to state 151
    RETURN         shift, and go to state 152
    VAR            shift, and go to state 19
    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    LCB            shift, and go to state 61
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 154

    DEFAULT  reduce using rule 160 (ExprCaseClause)
    CASE     reduce using rule 160 (ExprCaseClause)
    SC       reduce using rule 189 (EmptyStmt)
    RCB      reduce using rule 160 (ExprCaseClause)

    Block            go to state 155
    VarDecl          go to state 21
    ConstDecl        go to state 22
    IdentifierList   go to state 156
    ExpressionList   go to state 157
    Declaration      go to state 158
    ShortVarDecl     go to state 159
    Expression       go to state 160
    UnaryExpr        go to state 86
    unary_op         go to state 87
    PrimaryExpr      go to state 88
    Selector         go to state 89
    Operand          go to state 90
    Literal          go to state 91
    BasicLit         go to state 92
    OperandName      go to state 93
    Statement        go to state 161
    SimpleStmt       go to state 162
    LabeledStmt      go to state 163
    Label            go to state 164
    GoStmt           go to state 165
    ReturnStmt       go to state 166
    BreakStmt        go to state 167
    ContinueStmt     go to state 168
    GotoStmt         go to state 169
    FallthroughStmt  go to state 170
    IfStmt           go to state 171
    SwitchStmt       go to state 172
    ExprSwitchStmt   go to state 173
    TypeSwitchStmt   go to state 174
    ForStmt          go to state 175
    DeferStmt        go to state 176
    EmptyStmt        go to state 177
    ExpressionStmt   go to state 178
    IncDecStmt       go to state 179
    Assignment       go to state 180


State 315

   93 TypeAsertion: DOT LRB . Type RRB
  166 TypeSwitchGuard: IDENTIFIER ASSIGN PrimaryExpr DOT LRB . TYPE RRB

    FUNC        shift, and go to state 38
    TYPE        shift, and go to state 326
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 236
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 316

  167 TypeSwitchGuard: PrimaryExpr DOT LRB TYPE RRB .

    $default  reduce using rule 167 (TypeSwitchGuard)


State 317

  157 ExprSwitchStmt: SWITCH SimpleStmt SC LCB ExprCaseClause RCB .

    $default  reduce using rule 157 (ExprSwitchStmt)


State 318

  156 ExprSwitchStmt: SWITCH SimpleStmt SC Expression LCB ExprCaseClause . RCB
  160 ExprCaseClause: ExprCaseClause . ExprSwitchCase COL StatementList

    DEFAULT  shift, and go to state 273
    CASE     shift, and go to state 274
    RCB      shift, and go to state 327

    ExprSwitchCase  go to state 276


State 319

  164 TypeSwitchStmt: SWITCH SimpleStmt SC TypeSwitchGuard LCB TypeCaseClause . RCB
  168 TypeCaseClause: TypeCaseClause . TypeSwitchCase COL StatementList

    DEFAULT  shift, and go to state 303
    CASE     shift, and go to state 304
    RCB      shift, and go to state 328

    TypeSwitchCase  go to state 306


State 320

  173 TypeList: Type .

    $default  reduce using rule 173 (TypeList)


State 321

  170 TypeSwitchCase: CASE TypeList .
  172 TypeList: TypeList . COM Type

    COM  shift, and go to state 329

    $default  reduce using rule 170 (TypeSwitchCase)


State 322

  168 TypeCaseClause: TypeCaseClause TypeSwitchCase COL . StatementList

    $default  reduce using rule 12 (StatementList)

    StatementList  go to state 330


State 323

  148 IfStmt: IF SimpleStmt SC Expression Block ELSE . IfStmt
  149       | IF SimpleStmt SC Expression Block ELSE . Block

    IF   shift, and go to state 149
    LCB  shift, and go to state 61

    Block   go to state 331
    IfStmt  go to state 332


State 324

  183 PostStmt: SimpleStmt .

    $default  reduce using rule 183 (PostStmt)


State 325

  180 ForClause: InitStmt SC Condition SC PostStmt .

    $default  reduce using rule 180 (ForClause)


State 326

  166 TypeSwitchGuard: IDENTIFIER ASSIGN PrimaryExpr DOT LRB TYPE . RRB

    RRB  shift, and go to state 333


State 327

  156 ExprSwitchStmt: SWITCH SimpleStmt SC Expression LCB ExprCaseClause RCB .

    $default  reduce using rule 156 (ExprSwitchStmt)


State 328

  164 TypeSwitchStmt: SWITCH SimpleStmt SC TypeSwitchGuard LCB TypeCaseClause RCB .

    $default  reduce using rule 164 (TypeSwitchStmt)


State 329

  172 TypeList: TypeList COM . Type

    FUNC        shift, and go to state 38
    LRB         shift, and go to state 40
    LSB         shift, and go to state 41
    STAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    Type          go to state 334
    TypeName      go to state 46
    TypeLit       go to state 47
    ArrayType     go to state 48
    PointerType   go to state 49
    FunctionType  go to state 50


State 330

   11 StatementList: StatementList . Statement SC
  168 TypeCaseClause: TypeCaseClause TypeSwitchCase COL StatementList .

    error          shift, and go to state 142
    BREAK          shift, and go to state 143
    DEFER          shift, and go to state 144
    GO             shift, and go to state 145
    GOTO           shift, and go to state 146
    SWITCH         shift, and go to state 147
    CONST          shift, and go to state 18
    FALLTHROUGH    shift, and go to state 148
    IF             shift, and go to state 149
    CONTINUE       shift, and go to state 150
    FOR            shift, and go to state 151
    RETURN         shift, and go to state 152
    VAR            shift, and go to state 19
    DOT            shift, and go to state 72
    LRB            shift, and go to state 73
    LCB            shift, and go to state 61
    STAR           shift, and go to state 74
    AND            shift, and go to state 75
    PAR_ADD_OP     shift, and go to state 76
    PAR_UNARY_OP   shift, and go to state 77
    INT_LIT        shift, and go to state 78
    FLOAT_LIT      shift, and go to state 79
    IMAGINARY_LIT  shift, and go to state 80
    RUNE_LIT       shift, and go to state 81
    STRING_LIT     shift, and go to state 82
    IDENTIFIER     shift, and go to state 154

    DEFAULT  reduce using rule 168 (TypeCaseClause)
    CASE     reduce using rule 168 (TypeCaseClause)
    SC       reduce using rule 189 (EmptyStmt)
    RCB      reduce using rule 168 (TypeCaseClause)

    Block            go to state 155
    VarDecl          go to state 21
    ConstDecl        go to state 22
    IdentifierList   go to state 156
    ExpressionList   go to state 157
    Declaration      go to state 158
    ShortVarDecl     go to state 159
    Expression       go to state 160
    UnaryExpr        go to state 86
    unary_op         go to state 87
    PrimaryExpr      go to state 88
    Selector         go to state 89
    Operand          go to state 90
    Literal          go to state 91
    BasicLit         go to state 92
    OperandName      go to state 93
    Statement        go to state 161
    SimpleStmt       go to state 162
    LabeledStmt      go to state 163
    Label            go to state 164
    GoStmt           go to state 165
    ReturnStmt       go to state 166
    BreakStmt        go to state 167
    ContinueStmt     go to state 168
    GotoStmt         go to state 169
    FallthroughStmt  go to state 170
    IfStmt           go to state 171
    SwitchStmt       go to state 172
    ExprSwitchStmt   go to state 173
    TypeSwitchStmt   go to state 174
    ForStmt          go to state 175
    DeferStmt        go to state 176
    EmptyStmt        go to state 177
    ExpressionStmt   go to state 178
    IncDecStmt       go to state 179
    Assignment       go to state 180


State 331

  149 IfStmt: IF SimpleStmt SC Expression Block ELSE Block .

    $default  reduce using rule 149 (IfStmt)


State 332

  148 IfStmt: IF SimpleStmt SC Expression Block ELSE IfStmt .

    $default  reduce using rule 148 (IfStmt)


State 333

  166 TypeSwitchGuard: IDENTIFIER ASSIGN PrimaryExpr DOT LRB TYPE RRB .

    $default  reduce using rule 166 (TypeSwitchGuard)


State 334

  172 TypeList: TypeList COM Type .

    $default  reduce using rule 172 (TypeList)
